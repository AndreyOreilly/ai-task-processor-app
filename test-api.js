#!/usr/bin/env node

const axios = require("axios");

async function testAPI() {
  try {
    console.log("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint...");

    const response = await axios.post(
      "http://localhost:3000/api/process-task",
      {
        taskDescription:
          "–ù—É–∂–µ–Ω —Å–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç—ã–≤–∞–µ—Ç Excel-—Ñ–∞–π–ª –∏ —Å—á–∏—Ç–∞–µ—Ç —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–æ–ª–æ–Ω–∫–µ",
      },
      {
        headers: {
          "Content-Type": "application/json",
        },
      }
    );

    console.log("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç!");
    console.log("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:");
    console.log(
      "–ê–Ω–∞–ª–∏–∑:",
      response.data.analysis ? "‚úÖ –ü–æ–ª—É—á–µ–Ω" : "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    );
    console.log(
      "–ö–æ–¥:",
      response.data.generatedCode ? "‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω" : "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    );
    console.log(
      "Pull Request:",
      response.data.pullRequest ? "‚úÖ –°–æ–∑–¥–∞–Ω" : "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    );

    if (response.data.pullRequest) {
      console.log("\nüîó Pull Request URL:", response.data.pullRequest.url);
    }
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API:", error.message);
    if (error.response) {
      console.error("–°—Ç–∞—Ç—É—Å:", error.response.status);
      console.error("–î–∞–Ω–Ω—ã–µ:", error.response.data);
    }
  }
}

testAPI();
