#!/usr/bin/env node

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–∑ –ø—Ä–æ–º–ø—Ç–∞
function generateRepoNameFromPrompt(taskDescription) {
  const text = taskDescription.toLowerCase();

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø—Ä–æ–µ–∫—Ç–∞
  let projectType = "project";

  // –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞
  if (
    text.includes("—Å–∞–π—Ç") ||
    text.includes("website") ||
    text.includes("site") ||
    text.includes("web")
  ) {
    projectType = "website";
  } else if (
    text.includes("—Å–∫—Ä–∏–ø—Ç") ||
    text.includes("script") ||
    text.includes("tool") ||
    text.includes("utility")
  ) {
    projectType = "script";
  } else if (
    text.includes("–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ") ||
    text.includes("app") ||
    text.includes("application") ||
    text.includes("dashboard")
  ) {
    projectType = "app";
  }

  // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ –ø—Ä–æ–º–ø—Ç–∞ (–∏—Å–∫–ª—é—á–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Å–ª–æ–≤–∞)
  const stopWords = ['—Å–æ–∑–¥–∞–π', '–Ω–∞–ø–∏—à–∏', '—Å–¥–µ–ª–∞–π', '—Ä–∞–∑—Ä–∞–±–æ—Ç–∞–π', '–ø–æ—Å—Ç—Ä–æ–π', '—Å–æ–∑–¥–∞–π—Ç–µ', '–Ω–∞–ø–∏—à–∏—Ç–µ'];
  const words = text
    .replace(/[^–∞-—èa-z\s]/g, " ") // —É–±–∏—Ä–∞–µ–º —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã
    .split(/\s+/) // —Ä–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —Å–ª–æ–≤–∞
    .filter((word) => word.length > 2 && !stopWords.includes(word)) // –∏—Å–∫–ª—é—á–∞–µ–º —Å–ª—É–∂–µ–±–Ω—ã–µ —Å–ª–æ–≤–∞
    .slice(0, 2); // –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 2 —Å–ª–æ–≤–∞

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å—É—Ñ—Ñ–∏–∫—Å
  const suffix = Math.random().toString(36).substring(2, 6);

  // –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
  if (words.length > 0) {
    return `ai-${projectType}-${words.join("-")}-${suffix}`;
  } else {
    return `ai-${projectType}-${suffix}`;
  }
}

console.log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤\n");

const testTasks = [
  "—Å–æ–∑–¥–∞–π —Å–∞–π—Ç –ø—Ä–æ —Å–æ–±–∞—á–µ–∫",
  "—Å–æ–∑–¥–∞–π —Å–∞–π—Ç –ø—Ä–æ –∫–æ—à–µ–∫",
  "—Å–æ–∑–¥–∞–π —Å–∞–π—Ç –ø—Ä–æ –º—ã—à–µ–∫",
  "—Å–æ–∑–¥–∞–π —Å–∞–π—Ç –ø—Ä–æ –ø—Ç–∏—á–µ–∫",
  "—Å–æ–∑–¥–∞–π —Å–∞–π—Ç –ø—Ä–æ –∑–º–µ–π",
  "—Å–æ–∑–¥–∞–π React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏",
  "–Ω–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ CSV —Ñ–∞–π–ª–æ–≤",
  "—Å–æ–∑–¥–∞–π –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤",
  "—Å–æ–∑–¥–∞–π —Å–∞–π—Ç –ø—Ä–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è",
  "–Ω–∞–ø–∏—à–∏ —É—Ç–∏–ª–∏—Ç—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π",
  "—Å–æ–∑–¥–∞–π –¥–∞—à–±–æ—Ä–¥ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö",
];

console.log("üìù –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–∑–≤–∞–Ω–∏–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∑–∞–¥–∞—á:\n");

testTasks.forEach((task, index) => {
  const repoName = generateRepoNameFromPrompt(task);
  console.log(`${index + 1}. "${task}"`);
  console.log(`   ‚Üí ${repoName}\n`);
});

console.log("‚ú® –¢–µ–ø–µ—Ä—å –Ω–∞–∑–≤–∞–Ω–∏—è –±—É–¥—É—Ç –∫—Ä–∞—Å–∏–≤—ã–º–∏ –∏ –ø–æ–Ω—è—Ç–Ω—ã–º–∏!");
