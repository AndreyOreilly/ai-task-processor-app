const { Octokit } = require("@octokit/rest");
require("dotenv").config({ path: ".env.local" });

const octokit = new Octokit({
  auth: process.env.GITHUB_TOKEN,
});

const owner = "AndreyOreilly"; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç

async function enablePagesForRepo(repoName) {
  try {
    console.log(`üîß –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º GitHub Pages –¥–ª—è ${owner}/${repoName}...`);

    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º GitHub Pages
    await octokit.repos.createPagesSite({
      owner,
      repo: repoName,
      source: {
        branch: "main",
        path: "/",
      },
    });

    console.log(`‚úÖ GitHub Pages –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è ${owner}/${repoName}`);
    console.log(
      `üåê –°–∞–π—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://${owner}.github.io/${repoName}`
    );
  } catch (error) {
    if (error.status === 409) {
      console.log(`‚ÑπÔ∏è  GitHub Pages —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è ${owner}/${repoName}`);
    } else {
      console.error(
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ GitHub Pages –¥–ª—è ${owner}/${repoName}:`,
        error.message
      );
    }
  }
}

async function main() {
  const repos = [
    "ai-script-neobhodimo-prostuyu-veb-gy7n",
    "ai-script-posvyaschennyy-solntsu-resurs-4vla",
  ];

  console.log(
    "üöÄ –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º GitHub Pages –¥–ª—è –≤—Å–µ—Ö —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤...\n"
  );

  for (const repo of repos) {
    await enablePagesForRepo(repo);
    console.log(""); // –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
  }

  console.log("‚ú® –ì–æ—Ç–æ–≤–æ! –í—Å–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.");
}

main().catch(console.error);
