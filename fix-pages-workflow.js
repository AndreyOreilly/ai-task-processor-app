const { Octokit } = require("@octokit/rest");
require("dotenv").config({ path: ".env.local" });

const octokit = new Octokit({
  auth: process.env.GITHUB_TOKEN,
});

const owner = "AndreyOreilly";

async function updateWorkflowFile(repoName) {
  try {
    console.log(`üîß –û–±–Ω–æ–≤–ª—è–µ–º workflow –¥–ª—è ${owner}/${repoName}...`);

    const workflowContent = `name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: false
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      with:
        enablement: true
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4`;

    // –û–±–Ω–æ–≤–ª—è–µ–º workflow —Ñ–∞–π–ª
    await octokit.repos.createOrUpdateFileContents({
      owner,
      repo: repoName,
      path: ".github/workflows/deploy.yml",
      message: "Fix: Enable GitHub Pages automatically",
      content: Buffer.from(workflowContent).toString("base64"),
      branch: "main",
    });

    console.log(`‚úÖ Workflow –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è ${owner}/${repoName}`);
  } catch (error) {
    console.error(
      `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ workflow –¥–ª—è ${owner}/${repoName}:`,
      error.message
    );
  }
}

async function main() {
  const repos = [
    "ai-script-neobhodimo-prostuyu-veb-gy7n",
    "ai-script-posvyaschennyy-solntsu-resurs-4vla",
  ];

  console.log(
    "üöÄ –û–±–Ω–æ–≤–ª—è–µ–º workflow —Ñ–∞–π–ª—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ GitHub Pages...\n"
  );

  for (const repo of repos) {
    await updateWorkflowFile(repo);
    console.log(""); // –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
  }

  console.log("‚ú® –ì–æ—Ç–æ–≤–æ! –í—Å–µ workflow —Ñ–∞–π–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã.");
  console.log(
    "üìù –¢–µ–ø–µ—Ä—å –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º push –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π GitHub Pages –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏."
  );
}

main().catch(console.error);
